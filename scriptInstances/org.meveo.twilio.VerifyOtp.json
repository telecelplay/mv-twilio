{"code":"org.meveo.twilio.VerifyOtp","description":"Verify otp code","inputs":[{"name":"otp","type":"String"},{"name":"to","type":"String"}],"outputs":[{"name":"result","type":"String"}],"generateOutputs":false,"type":"JAVA","transactionType":"SAME","script":"package org.meveo.twilio;\n\nimport java.util.Map;\nimport org.meveo.service.script.Script;\nimport org.meveo.admin.exception.BusinessException;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.meveo.service.storage.RepositoryService;\nimport org.meveo.model.storage.Repository;\nimport org.meveo.api.persistence.CrossStorageApi;\nimport org.meveo.model.customEntities.OutboundSMS;\nimport java.time.Instant;\nimport java.time.Duration;\n\npublic class VerifyOtp extends Script {\n\n    private static final Logger log = LoggerFactory.getLogger(VerifyOtp.class);\n\n    private CrossStorageApi crossStorageApi = getCDIBean(CrossStorageApi.class);\n\n    private RepositoryService repositoryService = getCDIBean(RepositoryService.class);\n\n    private Repository defaultRepo = repositoryService.findDefaultRepository();\n\n    private String otp;\n\n    private String to;\n\n    private String result;\n\n    public String getResult() {\n        return result;\n    }\n\n    public void setOtp(String otp) {\n        this.otp = otp;\n    }\n\n    public void setTo(String to) {\n        this.to = to;\n    }\n\n  \n    private static final Duration maxDelay = Duration.ofMinutes(3);\n\n    private static final long maxAttemps = 5;\n\n\n    @Override\n    public void execute(Map<String, Object> parameters) throws BusinessException {\n        log.info(\"verify otp:{} to:{}\",otp,to);\n        result=\"invalid_request\";\n\t\t    OutboundSMS outboundSMS = crossStorageApi.find(defaultRepo, OutboundSMS.class)\n          .by(\"to\", to)\n          .by(\"purpose\",\"OTP\")\n          .by(\"verificationDate\",\"IS_NULL\")\n          .by(\"failureDate\",\"IS_NULL\")\n          .orderBy(\"creationDate\",false) // order by descending creationDate\n          .getResult();\n        if(outboundSMS!=null){\n          long attempts=outboundSMS.getVerificationAttempts();\n          if(attempts>maxAttemps || Duration.between(outboundSMS.getCreationDate(),Instant.now()).compareTo(maxDelay)>0){\n            outboundSMS.setFailureDate(Instant.now());\n            result=\"invalid_request\";\n          } else if(otp!=null && otp.equals(outboundSMS.getOtpCode())){\n            outboundSMS.setVerificationDate(Instant.now());\n            result=\"success\";\n          } else {\n            outboundSMS.setVerificationAttempts(attempts++);\n            result=\"invalid_code\";\n            return;\n          }\n          try {\n            crossStorageApi.createOrUpdate(defaultRepo, outboundSMS);\n          } catch (Exception ex) {\n                log.error(\"error updating twilio record :{}\", ex.getMessage());\n            \tresult=\"server_error\";\n              return;\n          }\n        }\n    }\n}\n","executionRoles":[],"sourcingRoles":[],"mavenDependencies":[],"importScriptInstances":[]}