{"code":"org.meveo.twilio.VerifyOtp","description":"Verify otp code","inputs":[{"name":"otp","type":"String"},{"name":"to","type":"String"}],"outputs":[{"name":"result","type":"String"}],"generateOutputs":false,"type":"JAVA","transactionType":"SAME","script":"package org.meveo.twilio;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.service.script.Script;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.meveo.service.storage.RepositoryService;\r\nimport org.meveo.model.storage.Repository;\r\nimport org.meveo.api.persistence.CrossStorageApi;\r\nimport org.meveo.model.customEntities.OutboundSMS;\r\nimport java.time.Instant;\r\nimport java.time.Duration;\r\n\r\npublic class VerifyOtp extends Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(VerifyOtp.class);\r\n\r\n    private CrossStorageApi crossStorageApi = getCDIBean(CrossStorageApi.class);\r\n\r\n    private RepositoryService repositoryService = getCDIBean(RepositoryService.class);\r\n\r\n    private Repository defaultRepo = repositoryService.findDefaultRepository();\r\n\r\n    private String otp;\r\n\r\n    private String to;\r\n\r\n    private String result;\r\n\r\n    public String getResult() {\r\n        return result;\r\n    }\r\n\r\n    public void setOtp(String otp) {\r\n        this.otp = otp;\r\n    }\r\n\r\n    public void setTo(String to) {\r\n        this.to = to;\r\n    }\r\n\r\n  \r\n    private static final Duration maxDelay = Duration.ofMinutes(3);\r\n\r\n    private static final long maxAttemps = 5;\r\n\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> parameters) throws BusinessException {\r\n        log.info(\"verify otp:{} to:{}\",otp,to);\r\n        result=\"invalid_request\";\r\n\t\t    OutboundSMS outboundSMS = crossStorageApi.find(defaultRepo, OutboundSMS.class)\r\n          .by(\"to\", to)\r\n          .by(\"purpose\",\"OTP\")\r\n          .by(\"verificationDate\",\"IS_NULL\")\r\n          .by(\"failureDate\",\"IS_NULL\")\r\n          .orderBy(\"creationDate\",false) // order by descending creationDate\r\n          .getResult();\r\n        if(outboundSMS!=null){\r\n          long attempts=outboundSMS.getVerificationAttempts();\r\n          if(attempts>=maxAttemps || Duration.between(outboundSMS.getCreationDate(),Instant.now()).compareTo(maxDelay)>0){\r\n            outboundSMS.setFailureDate(Instant.now());\r\n            result=\"invalid_request\";\r\n          } else if(otp!=null && otp.equals(outboundSMS.getOtpCode())){\r\n            outboundSMS.setVerificationDate(Instant.now());\r\n            result=\"success\";\r\n          } else {\r\n            outboundSMS.setVerificationAttempts(attempts++);\r\n            result=\"invalid_code\";\r\n          }\r\n          try {\r\n            crossStorageApi.createOrUpdate(defaultRepo, outboundSMS);\r\n          } catch (Exception ex) {\r\n                log.error(\"error updating twilio record :{}\", ex.getMessage());\r\n            \tresult=\"server_error\";\r\n              return;\r\n          }\r\n        }\r\n    }\r\n}\r\n","executionRoles":[],"sourcingRoles":[],"mavenDependencies":[],"importScriptInstances":[]}