{
  "code" : "facets.javascript.endpoints.verifyOtp.js",
  "inputs" : [ ],
  "outputs" : [ ],
  "generateOutputs" : false,
  "type" : "ES5",
  "transactionType" : "SAME",
  "script" : "import EndpointInterface from \"#{API_BASE_URL}/api/rest/endpoint/EndpointInterface.js\";\n\n// the request schema, this should be updated\n// whenever changes to the endpoint parameters are made\n// this is important because this is used to validate and parse the request parameters\nconst requestSchema = {\n  \"title\" : \"verifyOtpRequest\",\n  \"id\" : \"verifyOtpRequest\",\n  \"default\" : \"Schema definition for verifyOtp\",\n  \"$schema\" : \"http://json-schema.org/draft-07/schema\",\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"otp\" : {\n      \"title\" : \"otp\",\n      \"type\" : \"string\",\n      \"minLength\" : 1\n    }\n  }\n}\n\n// the response schema, this should be updated\n// whenever changes to the endpoint parameters are made\n// this is important because this could be used to parse the result\nconst responseSchema = {\n  \"title\" : \"verifyOtpResponse\",\n  \"id\" : \"verifyOtpResponse\",\n  \"default\" : \"Schema definition for verifyOtp\",\n  \"$schema\" : \"http://json-schema.org/draft-07/schema\",\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"result\" : {\n      \"title\" : \"result\",\n      \"type\" : \"string\",\n      \"minLength\" : 1\n    }\n  }\n}\n\n// should contain offline mock data, make sure it adheres to the response schema\nconst mockResult = {};\n\nclass verifyOtp extends EndpointInterface {\n\tconstructor() {\n\t\t// name and http method, these are inserted when code is generated\n\t\tsuper(\"verifyOtp\", \"POST\");\n\t\tthis.requestSchema = requestSchema;\n\t\tthis.responseSchema = responseSchema;\n\t\tthis.mockResult = mockResult;\n\t}\n\n\tgetRequestSchema() {\n\t\treturn this.requestSchema;\n\t}\n\n\tgetResponseSchema() {\n\t\treturn this.responseSchema;\n\t}\n}\n\nexport default new verifyOtp();\n",
  "executionRoles" : [ ],
  "sourcingRoles" : [ ],
  "mavenDependencies" : [ ],
  "importScriptInstances" : [ ]
}